{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger Documentation for ITA-Wiki",
        "description": "Project ITA-Wiki documentation wall",
        "version": "1.0.0.0"
    },
    "paths": {
        "/api/bookmarks": {
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a bookmark",
                "description": "Creates a new bookmark and returns a confirmation message",
                "operationId": "3ef5b66b351fa996ad037e264208b30a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "description": "GitHub ID of the user creating the bookmark",
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "description": "ID of the resource being bookmarked by the user",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "github_id": {
                                            "type": "integer",
                                            "example": 6729608
                                        },
                                        "resource_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete a bookmark",
                "description": "Deletes a bookmark and returns a confirmation message",
                "operationId": "41bfde9ffcfb74e92d350e61b45c157b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bookmarks/{github_id}": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks for a student",
                "description": "If the student's github_id exists it returns all bookmarks for that student or an empty array in case there is not any",
                "operationId": "615226efbbbcd8b51e9f0a3cc43f526f",
                "parameters": [
                    {
                        "name": "github_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6729608
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bookmark"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/likes/{github_id}": {
            "get": {
                "tags": [
                    "Likes"
                ],
                "summary": "Get all likes for a student",
                "description": "If the student's github_id exists it returns all likes for that student or an empty array in case there is not any",
                "operationId": "f550cb3cd10c52a7b8a033b17039f72c",
                "parameters": [
                    {
                        "name": "github_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6729608
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Like"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/likes": {
            "post": {
                "tags": [
                    "Likes"
                ],
                "summary": "Create a like",
                "description": "Creates a new like and returns a confirmation message",
                "operationId": "5ac3202f731f8f61051e941be69be36a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "github_id": {
                                            "type": "integer",
                                            "example": 6729608
                                        },
                                        "resource_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Likes"
                ],
                "summary": "Delete a like",
                "description": "Deletes a like and returns a confirmation message",
                "operationId": "20e338aa7fcb7d52fa22762125b1a3ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Search or list all resources",
                "description": "Returns resources matching the search term or all resources if no search term is provided",
                "operationId": "ee96de2f37d473ea4740b7700ddd1daf",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "JavaScript"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Resource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create a new resource using tag IDs",
                "description": "Creates a resource. This version expects an array of tag IDs instead of tag names.",
                "operationId": "0da436b1bb56ca9fcbc4523e6be6b1cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "title",
                                    "url",
                                    "category",
                                    "type"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 123456
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Aprende Laravel en 10 días"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Curso completo de Laravel para principiantes."
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://miweb.com/laravel"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Fullstack PHP"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            3,
                                            5
                                        ]
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "Video"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/resources/{resource}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get a single resource by ID",
                "description": "Retrieves a single resource, including its tags, by ID",
                "operationId": "0ac8ff12abd5b7294b4be0f79c69e0ca",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "ID of the resource to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Resources"
                ],
                "summary": "Update a resource",
                "description": "Update an existing resource with validation",
                "operationId": "6151c93c02e240dfbf6773224295a59a",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "ID of the resource to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "title",
                                    "description",
                                    "url"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Best Practices"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A collection of best practices for Laravel development"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://laravelbestpractices.com"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "testing"
                                        },
                                        "maxItems": 5,
                                        "uniqueItems": true,
                                        "example": [
                                            "testing",
                                            "tdd",
                                            "hooks"
                                        ],
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/resources/{id}": {
            "delete": {
                "tags": [
                    "Resources"
                ],
                "summary": "Delete a resource",
                "operationId": "19d9ee1b48d33cb8863f0554d74b4222",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully"
                    },
                    "403": {
                        "description": "Forbidden - Not your resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "operationId": "77e3636d8592997ce9d6d27b50857a69",
                "responses": {
                    "200": {
                        "description": "List of all roles"
                    }
                }
            }
        },
        "/api/roles/assign": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign role to user",
                "operationId": "94ec55ffd820aa34fe3cf84db896bf6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "role"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user}/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get user roles and permissions",
                "operationId": "6e4b987e1bc1f28ca42d6b8b19280b7b",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User roles and permissions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "github_id": {
                                                            "type": "string",
                                                            "example": "999999999"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "student",
                                                        "mentor"
                                                    ]
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "view resources",
                                                        "create resources",
                                                        "edit own resources"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Forbidden"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get all tags",
                "description": "Tags used in resources",
                "operationId": "4d0f4baf9e6fa992c0d85fbf140ebf17",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/tags/frequency": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag frequencies",
                "description": "Frequencies of tags used in resources",
                "operationId": "7ba6cfbebeddc69fac4a37ad216924ab",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/tags/category-frequency": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag frequencies grouped by category",
                "description": "Frequencies of tags used in resources grouped by category",
                "operationId": "ab99904db8b3f73579135af62493ea10",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/tags/by-category": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag IDs grouped by category",
                "description": "Returns the IDs of tags used in resources, grouped by resource category",
                "operationId": "492b2938f86869f4a413d6b4bd79c814",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/technical-tests": {
            "get": {
                "tags": [
                    "Technical Tests"
                ],
                "summary": "List technical tests with or w/out filters",
                "description": "Lists available technical test with options to filter by language and any part of the title and the description",
                "operationId": "getTechnicalTests",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by title",
                        "required": false,
                        "schema": {
                            "type": "String",
                            "example": "Basic PHP exam"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "Filter by language",
                        "required": false,
                        "schema": {
                            "type": "String",
                            "enum": [
                                "PHP",
                                "JavaScript",
                                "Java",
                                "React",
                                "TypeScript",
                                "Python",
                                "SQL"
                            ]
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Search by any part of the description",
                        "required": false,
                        "schema": {
                            "type": "String",
                            "example": "SOLID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technical Tests successfully listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "github_id": {
                                                        "type": "integer",
                                                        "example": 6729608,
                                                        "nullable": true
                                                    },
                                                    "node_id": {
                                                        "type": "string",
                                                        "example": "MDQ6VXNlcjY3Mjk2MDg=",
                                                        "nullable": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Basic PHP exam"
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "example": "PHP"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Solve this exam paying atention to SOLID principles"
                                                    },
                                                    "file_path": {
                                                        "type": "string",
                                                        "example": "technical_tests/exam.pdf",
                                                        "nullable": true
                                                    },
                                                    "file_original_name": {
                                                        "type": "string",
                                                        "example": "exam.pdf",
                                                        "nullable": true
                                                    },
                                                    "file_size": {
                                                        "type": "integer",
                                                        "example": 1024,
                                                        "nullable": true
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "example": [
                                                            "php",
                                                            "backend"
                                                        ],
                                                        "nullable": true
                                                    },
                                                    "bookmark_count": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "like_count": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No se han encontrado tests con esos criterios",
                                            "nullable": true
                                        },
                                        "filters": {
                                            "properties": {
                                                "available_languages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "PHP",
                                                        "JavaScript",
                                                        "Java",
                                                        "React",
                                                        "TypeScript",
                                                        "Python",
                                                        "SQL"
                                                    ]
                                                },
                                                "applied_filters": {
                                                    "type": "object",
                                                    "example": {
                                                        "search": "Examen de PHP básico",
                                                        "language": "PHP"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El título no debe exceder los 255 caracteres."
                                        },
                                        "errors": {
                                            "properties": {
                                                "search": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "El título no debe exceder los 255 caracteres."
                                                    ]
                                                },
                                                "language": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "El lenguaje seleccionado no es válido."
                                                    ]
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "El campo descripción no debe exceder los 1000 caracteres."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Technical Tests"
                ],
                "summary": "Crear una nueva prueba técnica",
                "description": "Crea una nueva prueba técnica en el sistema. Permite adjuntar un archivo PDF opcional.",
                "operationId": "d8831d1b213e6ffe68855b0d3c8c51cf",
                "requestBody": {
                    "description": "Datos de la prueba técnica y archivo opcional",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "language"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 5,
                                        "example": "Examen PHP Básico"
                                    },
                                    "language": {
                                        "type": "string",
                                        "enum": [
                                            "PHP",
                                            "JavaScript",
                                            "Java",
                                            "React",
                                            "TypeScript",
                                            "Python",
                                            "SQL"
                                        ],
                                        "example": "PHP"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Examen sobre conceptos básicos de PHP",
                                        "nullable": true
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "php",
                                            "backend"
                                        ],
                                        "nullable": true
                                    },
                                    "file": {
                                        "description": "Archivo PDF opcional",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Prueba técnica creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Technical test created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Examen PHP Básico"
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "PHP"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Examen sobre conceptos básicos de PHP"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "php",
                                                        "backend"
                                                    ]
                                                },
                                                "file_path": {
                                                    "type": "string",
                                                    "example": "technical-tests/1625678900_prueba.pdf"
                                                },
                                                "file_original_name": {
                                                    "type": "string",
                                                    "example": "prueba.pdf"
                                                },
                                                "file_size": {
                                                    "type": "integer",
                                                    "example": 102400
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error de validación",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/technical-tests/{id}": {
            "get": {
                "tags": [
                    "Technical Tests"
                ],
                "summary": "Get a technical test",
                "operationId": "69cb172449b6cec409dd4ab66bcaefbd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technical test details"
                    }
                }
            },
            "put": {
                "tags": [
                    "Technical Tests"
                ],
                "summary": "Update a technical test",
                "operationId": "e969a1679711418915a18cf6cc41347d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technical test updated successfully"
                    },
                    "403": {
                        "description": "Forbidden - Not your technical test"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Technical Tests"
                ],
                "summary": "Delete a technical test",
                "operationId": "dea4ba233ee8fb98007b93b754278754",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technical test deleted successfully"
                    },
                    "403": {
                        "description": "Forbidden - Not your technical test"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Bookmark": {
                "title": "Bookmark",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 9
                    },
                    "github_id": {
                        "description": "Foreign key representing the GitHub ID of the user",
                        "type": "integer",
                        "example": 6729608
                    },
                    "resource_id": {
                        "description": "Foreign key representing the ID of the bookmarked resource",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Like": {
                "title": "Like",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 9
                    },
                    "github_id": {
                        "description": "Foreign key representing the GitHub ID of the user",
                        "type": "integer",
                        "example": 6729608
                    },
                    "resource_id": {
                        "description": "Foreign key representing the ID of the liked resource",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Resource": {
                "title": "Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "github_id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "title": {
                        "type": "string",
                        "example": "Lorem Ipsum ...",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Lorem Ipsum ...",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.hola.com",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "Node",
                            "React",
                            "Angular",
                            "JavaScript",
                            "Java",
                            "Fullstack PHP",
                            "Data Science",
                            "BBDD"
                        ],
                        "example": "Node"
                    },
                    "tags": {
                        "description": "Array of tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "kubernetes",
                            "sql",
                            "azure"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Video",
                            "Cursos",
                            "Blog"
                        ],
                        "example": "Video"
                    },
                    "bookmark_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "like_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "description": "Tags used in resources",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "debugging"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Technical Tests",
            "description": "API Endpoints for Technical Tests"
        },
        {
            "name": "Bookmarks",
            "description": "Bookmarks"
        },
        {
            "name": "Likes",
            "description": "Likes"
        },
        {
            "name": "Resources",
            "description": "Resources"
        },
        {
            "name": "Roles",
            "description": "Roles"
        },
        {
            "name": "Tags",
            "description": "Tags"
        }
    ]
}