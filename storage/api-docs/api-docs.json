{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger Documentation for ITA-Wiki",
        "description": "Project ITA-Wiki documentation wall",
        "version": "1.0.0.0"
    },
    "paths": {
        "/api/bookmarks": {
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a bookmark",
                "description": "Creates a new bookmark and returns a confirmation message",
                "operationId": "3ef5b66b351fa996ad037e264208b30a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "description": "GitHub ID of the user creating the bookmark",
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "description": "ID of the resource being bookmarked by the user",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "github_id": {
                                            "type": "integer",
                                            "example": 6729608
                                        },
                                        "resource_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete a bookmark",
                "description": "Deletes a bookmark and returns a confirmation message",
                "operationId": "41bfde9ffcfb74e92d350e61b45c157b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bookmarks/{github_id}": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks for a student",
                "description": "If the student's github_id exists it returns all bookmarks for that student or an empty array in case there is not any",
                "operationId": "615226efbbbcd8b51e9f0a3cc43f526f",
                "parameters": [
                    {
                        "name": "github_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6729608
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bookmark"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/likes": {
            "post": {
                "tags": [
                    "Likes"
                ],
                "summary": "Create a like",
                "description": "Creates a new like and returns a confirmation message",
                "operationId": "5ac3202f731f8f61051e941be69be36a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "github_id": {
                                            "type": "integer",
                                            "example": 6729608
                                        },
                                        "resource_id": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-03T15:27:09.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Likes"
                ],
                "summary": "Delete a like",
                "description": "Deletes a like and returns a confirmation message",
                "operationId": "20e338aa7fcb7d52fa22762125b1a3ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "resource_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "resource_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/likes/{github_id}": {
            "get": {
                "tags": [
                    "Likes"
                ],
                "summary": "Get all likes for a student",
                "description": "If the student's github_id exists it returns all likes for that student or an empty array in case there is not any",
                "operationId": "f550cb3cd10c52a7b8a033b17039f72c",
                "parameters": [
                    {
                        "name": "github_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6729608
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Like"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get all resources",
                "description": "Returns a list of all resources",
                "operationId": "ee96de2f37d473ea4740b7700ddd1daf",
                "responses": {
                    "200": {
                        "description": "Resource list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Resource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create a new resource",
                "description": "Creates a new resource and returns the created resource",
                "operationId": "0da436b1bb56ca9fcbc4523e6be6b1cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "title",
                                    "description",
                                    "url",
                                    "category",
                                    "type"
                                ],
                                "properties": {
                                    "github_id": {
                                        "description": "GitHub ID of an existing user role creating the resource",
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "title": {
                                        "description": "Title of the resource",
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 5,
                                        "example": "Laravel Best Practices"
                                    },
                                    "description": {
                                        "description": "Description of the resource (10-1000 characters)",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "minLength": 10,
                                        "example": "A collection of best practices for Laravel development"
                                    },
                                    "url": {
                                        "description": "URL of the resource",
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://laravelbestpractices.com"
                                    },
                                    "category": {
                                        "description": "Category of the resource",
                                        "type": "string",
                                        "enum": [
                                            "Node",
                                            "React",
                                            "Angular",
                                            "JavaScript",
                                            "Java",
                                            "Fullstack PHP",
                                            "Data Science",
                                            "BBDD"
                                        ],
                                        "example": "React"
                                    },
                                    "tags": {
                                        "description": "Array of tags validated against available options (nullable)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "oop"
                                        }
                                    },
                                    "type": {
                                        "description": "Type of the resource",
                                        "type": "string",
                                        "enum": [
                                            "Video",
                                            "Cursos",
                                            "Blog"
                                        ],
                                        "example": "Video"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Resource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "github_id": [
                                                    "The github_id field is required.",
                                                    "The selected github_id is invalid."
                                                ],
                                                "title": [
                                                    "The title field is required.",
                                                    "Title must be at least 5 characters.",
                                                    "Title must not exceed 255 characters."
                                                ],
                                                "description": [
                                                    "The description field is required.",
                                                    "Description must be at least 10 characters.",
                                                    "Description must not exceed 1000 characters."
                                                ],
                                                "url": [
                                                    "The url field is required.",
                                                    "The url format is invalid."
                                                ],
                                                "category": [
                                                    "The category field is required.",
                                                    "The selected category is invalid."
                                                ],
                                                "tags": [
                                                    "The tags field must be an array of strings.",
                                                    "The selected tags are invalid."
                                                ],
                                                "type": [
                                                    "The type field is required.",
                                                    "The selected type is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resources/{resource}": {
            "put": {
                "tags": [
                    "Resources"
                ],
                "summary": "Update a resource",
                "description": "Update an existing resource with validation",
                "operationId": "2fb72cef844f47cbfbad3db9664d992c",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "ID of the resource to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "title",
                                    "description",
                                    "url"
                                ],
                                "properties": {
                                    "github_id": {
                                        "type": "integer",
                                        "example": 6729608
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Best Practices"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A collection of best practices for Laravel development"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://laravelbestpractices.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required.",
                                                    "Title must be at least 5 characters.",
                                                    "Title must not exceed 255 characters."
                                                ],
                                                "description": [
                                                    "The description field is required.",
                                                    "Description must be at least 10 characters.",
                                                    "Description must not exceed 1000 characters."
                                                ],
                                                "url": [
                                                    "The url field is required.",
                                                    "The url format is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "description": "Allows an authorized user to create a new role for a specific GitHub ID.",
                "operationId": "4131bb39b430bdf2d95b73111d2e126a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_id",
                                    "role",
                                    "authorized_github_id"
                                ],
                                "properties": {
                                    "github_id": {
                                        "description": "GitHub ID of the user to assign the role",
                                        "type": "integer",
                                        "example": 12345
                                    },
                                    "role": {
                                        "description": "Role to be assigned",
                                        "type": "string",
                                        "example": "mentor"
                                    },
                                    "authorized_github_id": {
                                        "description": "GitHub ID of the user making the request (must have permissions)",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rol creado con éxito."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized: Cannot create a role equal or higher than your own",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No puedes crear un rol igual o superior al tuyo."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Retrieve a role by GitHub ID",
                "description": "Fetches a role using the provided GitHub ID. If the role does not exist, it returns an error.",
                "operationId": "b381f169e17b927e71d392ff0f3d4ce5",
                "parameters": [
                    {
                        "name": "github_id",
                        "in": "query",
                        "description": "GitHub ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 6729608
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role found."
                                        },
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role not found."
                                        },
                                        "role": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get all tags",
                "description": "Tags used in resources",
                "operationId": "4d0f4baf9e6fa992c0d85fbf140ebf17",
                "responses": {
                    "200": {
                        "description": "A list of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tag"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tags/frequency": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag frequencies",
                "description": "Frequencies of tags used in resources",
                "operationId": "7ba6cfbebeddc69fac4a37ad216924ab",
                "responses": {
                    "200": {
                        "description": "An object with tag names as keys and frequencies as values",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Bookmark": {
                "title": "Bookmark",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 9
                    },
                    "github_id": {
                        "description": "Foreign key representing the GitHub ID of the user",
                        "type": "integer",
                        "example": 6729608
                    },
                    "resource_id": {
                        "description": "Foreign key representing the ID of the bookmarked resource",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Like": {
                "title": "Like",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 9
                    },
                    "github_id": {
                        "description": "Foreign key representing the GitHub ID of the user",
                        "type": "integer",
                        "example": 6729608
                    },
                    "resource_id": {
                        "description": "Foreign key representing the ID of the liked resource",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Resource": {
                "title": "Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "github_id": {
                        "type": "integer",
                        "example": 12345
                    },
                    "title": {
                        "type": "string",
                        "example": "Lorem Ipsum ...",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Lorem Ipsum ...",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.hola.com",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "Node",
                            "React",
                            "Angular",
                            "JavaScript",
                            "Java",
                            "Fullstack PHP",
                            "Data Science",
                            "BBDD"
                        ],
                        "example": "Node"
                    },
                    "tags": {
                        "description": "Array of tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "kubernetes",
                            "sql",
                            "azure"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Video",
                            "Cursos",
                            "Blog"
                        ],
                        "example": "Video"
                    },
                    "bookmark_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "like_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role object representing a user's role and associated GitHub ID",
                "properties": {
                    "github_id": {
                        "description": "The GitHub ID of the user",
                        "type": "integer",
                        "example": 6729608
                    },
                    "role": {
                        "description": "The role of the user",
                        "type": "string",
                        "example": "student"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "description": "Tags used in resources",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "debugging"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-03-17T19:23:41.000000Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Bookmarks",
            "description": "Bookmarks"
        },
        {
            "name": "Likes",
            "description": "Likes"
        },
        {
            "name": "Resources",
            "description": "Resources"
        },
        {
            "name": "Roles",
            "description": "Roles"
        },
        {
            "name": "Tags",
            "description": "Tags"
        }
    ]
}